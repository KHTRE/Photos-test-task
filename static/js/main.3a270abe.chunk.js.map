{"version":3,"sources":["api/photos.ts","components/ListOfPhotos/ListOfPhotos.tsx","components/Header/Header.tsx","components/Pagination/Pagination.tsx","components/Modal/Modal.tsx","components/Loader/Loader.tsx","components/Error/Error.tsx","App.tsx","index.tsx"],"names":["API_URL","getPhotosFromServer","a","fetch","response","json","deletePhotoFromServer","photoId","url","method","console","log","ListOfPhotos","props","photos","setPhotos","selectedAlbum","setPagesCount","selectedPage","setSelectedPhoto","handlePhotoSelect","event","currentTarget","name","handlePhotoDelete","photosCopy","delIndex","findIndex","photo","id","splice","className","filteredPhotos","filter","albumId","pagesCount","Math","ceil","length","getFilteredPhotos","_photo","index","map","type","onClick","String","src","thumbnailUrl","alt","title","Header","albums","setSelectedAlbum","setSelectedPage","htmlFor","value","onChange","target","album","Pagination","setPage","list","i","push","getPagesList","page","classNames","active","Modal","selectedPhoto","correctPhoto","find","Loader","role","Error","App","useState","error","setError","loading","setLoading","setAlbums","getPhotos","photosFromServer","listOfAlbums","finalListOfAlbums","Array","from","Set","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a270abe.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com/photos';\n\nexport const getPhotosFromServer = async () => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n\nexport const deletePhotoFromServer = async (photoId: number) => {\n  const url = `${API_URL}/${photoId}`;\n  const response = await fetch(url, {\n    method: 'DELETE',\n  });\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n};\n","import React from 'react';\nimport { deletePhotoFromServer } from '../../api/photos';\n\ntype SetPhotos = (photos: Photo[]) => void;\ntype SetPagesCount = (count: number) => void;\ntype SetSelectedPhoto = (photo: number) => void;\n\ntype Props = {\n  photos: Photo[];\n  setPhotos: SetPhotos;\n  selectedAlbum: number;\n  setPagesCount: SetPagesCount;\n  selectedPage: number;\n  setSelectedPhoto: SetSelectedPhoto;\n};\n\nexport const ListOfPhotos: React.FC<Props> = (props) => {\n  const {\n    photos,\n    setPhotos,\n    selectedAlbum,\n    setPagesCount,\n    selectedPage,\n    setSelectedPhoto,\n  } = props;\n\n  const getFilteredPhotos = () => {\n    let filteredPhotos = photos;\n\n    if (selectedAlbum !== 0) {\n      filteredPhotos = photos.filter(photo => photo.albumId === selectedAlbum);\n    }\n\n    const pagesCount = Math.ceil(filteredPhotos.length / 10);\n\n    setPagesCount(pagesCount);\n\n    return filteredPhotos;\n  };\n\n  const getPhotosToShow = () => {\n    return getFilteredPhotos().filter((_photo, index) => (\n      index >= selectedPage * 10 - 10 && index < selectedPage * 10\n    ));\n  };\n\n  const handlePhotoSelect = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setSelectedPhoto(+event.currentTarget.name);\n  };\n\n  const handlePhotoDelete = (event: React.MouseEvent<HTMLButtonElement>) => {\n    deletePhotoFromServer(+event.currentTarget.name);\n    const photosCopy = [...photos];\n    const delIndex = photosCopy.findIndex(photo => photo.id === +event.currentTarget.name);\n\n    photosCopy.splice(delIndex, 1);\n    setPhotos(photosCopy);\n  };\n\n  return (\n    <div className=\"px-4 row row-cols-1 row-cols-md-5 row-cols-sm-3 g-4\">\n      {getPhotosToShow().map(photo => (\n        <div className=\"col\">\n          <div className=\"card h-100\">\n            <button\n              type=\"button\"\n              onClick={handlePhotoSelect}\n              name={String(photo.id)}\n              className=\"btn btn-outline-secondary\"\n            >\n              <img\n                src={photo.thumbnailUrl}\n                className=\"card-img-top\"\n                alt={photo.title}\n              />\n            </button>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{photo.title}</h5>\n            </div>\n            <button type=\"button\" className=\"button is-danger\" onClick={handlePhotoDelete} name={String(photo.id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\ntype SetSelectedAlbum = (selectedAlbum:number) => void;\ntype SetSelectedPage = (selectedPage:number) => void;\n\ntype Props = {\n  albums: number[];\n  selectedAlbum: number;\n  setSelectedAlbum: SetSelectedAlbum;\n  setSelectedPage: SetSelectedPage;\n};\n\nexport const Header: React.FC<Props> = (props) => {\n  const {\n    albums,\n    selectedAlbum,\n    setSelectedAlbum,\n    setSelectedPage,\n  } = props;\n\n  const handleAlbumSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (+event.target.value !== selectedAlbum) {\n      setSelectedAlbum(+event.target.value);\n      setSelectedPage(1);\n    }\n  };\n\n  return (\n    <header className=\"d-flex justify-content-center py-4\">\n      <label htmlFor=\"select\">\n        Select desired album: &nbsp;\n        <select\n          id=\"select\"\n          value={selectedAlbum}\n          onChange={handleAlbumSelect}\n        >\n          <option value=\"0\">All albums</option>\n          {albums.map(album => (\n            <option key={album} value={album}>{album}</option>\n          ))}\n        </select>\n      </label>\n    </header>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype SetSelectedPage = (page: number) => void;\n\ntype Props = {\n  selectedPage: number;\n  setSelectedPage: SetSelectedPage;\n  pagesCount: number;\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const { pagesCount, selectedPage, setSelectedPage } = props;\n\n  const setPage = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setSelectedPage(+event.currentTarget.name);\n  };\n\n  const getPagesList = () => {\n    const list = [];\n\n    if (pagesCount <= 5) {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 1; i <= pagesCount; i++) {\n        list.push(i);\n      }\n    } else if (selectedPage <= 3) {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 1; i <= 5; i++) {\n        list.push(i);\n      }\n    } else if (selectedPage > 3 && pagesCount - selectedPage >= 2) {\n      // eslint-disable-next-line no-plusplus\n      for (let i = selectedPage - 2; i <= selectedPage + 2; i++) {\n        list.push(i);\n      }\n    } else {\n      // eslint-disable-next-line no-plusplus\n      for (let i = pagesCount - 4; i <= pagesCount; i++) {\n        list.push(i);\n      }\n    }\n\n    return list;\n  };\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination justify-content-center py-4\">\n        <button\n          type=\"button\"\n          className=\"btn btn-warning mx-4\"\n          onClick={() => {\n            setSelectedPage(1);\n          }}\n        >\n          First page\n        </button>\n        {getPagesList().map(page => (\n          <li className={classNames('page-item', { active: selectedPage === page })} key={page}>\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              name={String(page)}\n              onClick={setPage}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n        <button\n          type=\"button\"\n          className=\"btn btn-warning mx-4\"\n          onClick={() => {\n            setSelectedPage(pagesCount);\n          }}\n        >\n          Last page\n        </button>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype SetSelectedPhoto = (photo: number) => void;\n\ntype Props = {\n  selectedPhoto: number;\n  photos: Photo[];\n  setSelectedPhoto: SetSelectedPhoto;\n};\n\nexport const Modal: React.FC<Props> = (props) => {\n  const { selectedPhoto, photos, setSelectedPhoto } = props;\n  const correctPhoto = photos.find(photo => photo.id === selectedPhoto);\n\n  return (\n    <div className={classNames('modal', { 'is-active': selectedPhoto })}>\n      <div className=\"modal-background\" />\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{correctPhoto && correctPhoto.title}</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={() => {\n                setSelectedPhoto(0);\n              }}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {correctPhoto && <img src={correctPhoto.url} alt={correctPhoto.title} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Loader: React.FC = () => (\n  <div className=\"modal-background bg-light\">\n    <div className=\"position-absolute top-50 start-50\">\n\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport const Error: React.FC = () => (\n  <div className=\"modal-background bg-light\">\n    <span>An error ocurred while loading data from server</span>\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { ListOfPhotos } from './components/ListOfPhotos';\nimport { Header } from './components/Header';\nimport { Pagination } from './components/Pagination';\nimport { Modal } from './components/Modal';\nimport { Loader } from './components/Loader';\nimport { Error } from './components/Error';\nimport { getPhotosFromServer } from './api/photos';\n\nexport const App: React.FC = () => {\n  const [photos, setPhotos] = useState<Photo[]>([]);\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState(false);\n  const [albums, setAlbums] = useState<number[]>([]);\n  const [selectedAlbum, setSelectedAlbum] = useState<number>(0);\n  const [selectedPage, setSelectedPage] = useState<number>(1);\n  const [pagesCount, setPagesCount] = useState<number>(1);\n  const [selectedPhoto, setSelectedPhoto] = useState<number>(0);\n\n  const getPhotos = async () => {\n    setLoading(true);\n    let photosFromServer: Photo[] = [];\n\n    try {\n      photosFromServer = await getPhotosFromServer();\n    } catch {\n      setError(true);\n    }\n\n    const listOfAlbums = photosFromServer.map(photo => photo.albumId);\n    const finalListOfAlbums = Array.from(new Set(listOfAlbums));\n\n    setPhotos(photosFromServer);\n    setAlbums(finalListOfAlbums);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getPhotos();\n  }, []);\n\n  return (\n    <div>\n      <Modal\n        selectedPhoto={selectedPhoto}\n        photos={photos}\n        setSelectedPhoto={setSelectedPhoto}\n      />\n      <Header\n        albums={albums}\n        selectedAlbum={selectedAlbum}\n        setSelectedAlbum={setSelectedAlbum}\n        setSelectedPage={setSelectedPage}\n      />\n      <ListOfPhotos\n        photos={photos}\n        setPhotos={setPhotos}\n        selectedAlbum={selectedAlbum}\n        setPagesCount={setPagesCount}\n        selectedPage={selectedPage}\n        setSelectedPhoto={setSelectedPhoto}\n      />\n      <Pagination\n        selectedPage={selectedPage}\n        setSelectedPage={setSelectedPage}\n        pagesCount={pagesCount}\n      />\n      {loading && <Loader />}\n      {error && <Error />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}